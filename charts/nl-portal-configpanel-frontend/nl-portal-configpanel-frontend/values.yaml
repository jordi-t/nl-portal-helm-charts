# Default values for nl-portal-configpanel-frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
image:
  repository: ghcr.io/nl-portal/configuration-panel-frontend
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: nl-portal-config-panel.example.com

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Liveness probe for container health checking
livenessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 40
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

# -- Readiness probe for container health checking
readinessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

# -- Resource requests and limits
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Array with extra environment variables to add
# e.g:
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []

# -- Optionally specify extra list of additional volumes
# e.g:
# extraVolumes:
#   - name: verify-certs
#     configMap:
#       name: verify-certs
extraVolumes: []

# -- Optionally specify extra list of additional volumeMounts
# e.g:
# extraVolumeMounts:
#  - name: verify-certs
#    mountPath: /etc/ssl/certs/extra-certs/
extraVolumeMounts: []

# -- Application Settings
settings:
  oidc:
    # -- Required: OIDC Authority/Oauth2 Provider URL.
    url: ""
    # -- Required: The Client ID of the client that will be used for the authentication flow at the OIDC Authority.
    clientId: ""
    # -- Required: The post authentication target URL where the OIDC Authority should redirect the user. Should be set to the base URL of this application.
    redirectUrl:  ""
    # -- Required: The post logout target URL where the OIDC Authority should redirect the user.
    postLogoutRedirectUrl: ""
    # -- Required: The name of the Spring Boot application whose configuration is being provided by this application. Example: nl-portal-app.
    clientApplicationName: ""

  app:
    # -- Set to the base URL of the backend REST API should the backend and frontend be running on different hosts without routing.
    configPanelRestUrl: ""
